# frozen_string_literal: true

# Command to process a student submission using LLM
#
# This command takes a student submission ID, retrieves the submission,
# and processes it to generate feedback. Currently, it just logs the submission ID.
class ProcessStudentSubmissionCommand < BaseCommand
  def initialize(student_submission_id:)
    super
  end

  private

  # Execute the command logic
  # For now, this simply logs the student submission ID
  # In the future, this will use the LLM framework to generate feedback
  #
  # @return [StudentSubmission] The processed student submission
  def execute
    # Find the student submission by ID
    student_submission = StudentSubmission.find_by(id: student_submission_id)

    unless student_submission
      @errors << "Student submission not found with ID: #{student_submission_id}"
      return nil
    end

    # Update status to processing using the StatusManager
    unless StatusManager.transition_submission(student_submission, :processing)
      @errors << "Could not transition submission to processing state"
      return nil
    end

    # For now, just log the submission ID
    Rails.logger.info("Processing student submission #{student_submission_id} for document: #{student_submission.original_doc_id}")

    # Future implementation:
    # 1. Fetch document content from Google Drive
    # 2. Use LLM to grade the submission according to the grading_task's rubric
    # 3. Update the submission with feedback and grade

    # Mock successful completion for now (in a real implementation, this would happen after processing)
    # For demo purposes, randomly succeed or fail to show both paths
    if rand > 0.2 # 80% success rate
      # Use StatusManager for transitioning to completed state
      StatusManager.transition_submission(
        student_submission,
        :completed,
        { feedback: "This is mock feedback generated by the system." }
      )
    else
      # Use StatusManager for transitioning to failed state
      StatusManager.transition_submission(
        student_submission,
        :failed,
        { feedback: "Submission processing failed." }
      )
    end

    # Return the student submission as the result
    student_submission
  end
end
